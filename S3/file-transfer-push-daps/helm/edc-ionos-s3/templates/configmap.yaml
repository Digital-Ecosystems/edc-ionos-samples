apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "edc-ionos-s3.fullname" . }}-config
data:
  config.properties: |
    web.http.port={{ .Values.web.http.port }}
    web.http.path={{ .Values.web.http.path }}
    web.http.management.port={{ .Values.web.http.management.port }}
    web.http.management.path={{ .Values.web.http.management.path }}
    web.http.protocol.port={{ .Values.web.http.protocol.port }}
    web.http.protocol.path={{ .Values.web.http.protocol.path }}
    web.http.control.port={{ .Values.web.http.control.port }}
    web.http.control.path={{ .Values.web.http.control.path }}
    web.http.public.port={{ .Values.web.http.public.port }}
    web.http.public.path={{ .Values.web.http.public.path }}
    edc.api.auth.key={{ .Values.edc.api.auth.key }}
    edc.dsp.callback.address={{ .Values.edc.dsp.callback.address }}
    edc.vault.clientid={{ .Values.edc.vault.clientid }}
    edc.vault.tenantid={{ .Values.edc.vault.tenantid }}
    edc.vault.certificate={{ .Values.edc.vault.certificate }}
    edc.vault.name={{ .Values.edc.vault.name }}
    edc.vault.hashicorp.url={{ .Values.edc.vault.hashicorp.url }}
    edc.vault.hashicorp.token={{ .Values.edc.vault.hashicorp.token }}
    edc.vault.hashicorp.timeout.seconds={{ .Values.edc.vault.hashicorp.timeout.seconds }}
    edc.ionos.access.key=accessKey
    edc.ionos.secret.key=secretKey
    edc.ionos.endpoint=endpoint
    edc.ionos.token=token
    edc.oauth.token.url={{ .Values.edc.oauth.tokenUrl }}
    edc.oauth.client.id={{ .Values.edc.oauth.clientId }}
    edc.oauth.provider.audience={{ .Values.edc.oauth.audience }}
    edc.oauth.endpoint.audience={{ .Values.edc.oauth.audience }}
    edc.oauth.provider.jwks.url={{ .Values.edc.oauth.providerJwksUrl }}
    edc.oauth.certificate.alias={{ .Values.edc.oauth.certificateAlias }}
    edc.oauth.private.key.alias={{ .Values.edc.oauth.privateKeyAlias }}
    edc.iam.token.scope={{ .Values.edc.oauth.audience }}