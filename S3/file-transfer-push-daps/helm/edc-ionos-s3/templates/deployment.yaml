apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "edc-ionos-s3.fullname" . }}
  labels:
    {{- include "edc-ionos-s3.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "edc-ionos-s3.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "edc-ionos-s3.selectorLabels" . | nindent 8 }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret.name }}
      serviceAccountName: {{ include "edc-ionos-s3.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: EDC_FS_CONFIG
            value: "/resources/config.properties"
          - name: EDC_VAULT
            value: "/resources/config.properties"
          - name: EDC_KEYSTORE
            value: "/resources/keystore.p12"
          - name: EDC_KEYSTORE_PASSWORD
            value: {{ .Values.edc.keystorePassword | quote }}
          ports:
            - name: api
              containerPort: {{ .Values.service.apiPort }}
              protocol: TCP
            - name: management
              containerPort: {{ .Values.service.managementPort }}
              protocol: TCP
            - name: protocol
              containerPort: {{ .Values.service.protocolPort }}
              protocol: TCP
            - name: control
              containerPort: {{ .Values.service.controlPort }}
              protocol: TCP
            - name: public
              containerPort: {{ .Values.service.publicPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/check/health
              port: api
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/check/health
              port: api
            initialDelaySeconds: 60
            periodSeconds: 30
          volumeMounts:
            - name: config
              mountPath: /resources/config.properties
              subPath: config.properties
            - name: keystore
              mountPath: /resources/keystore.p12
              subPath: keystore.p12
      volumes:
        - name: config
          configMap:
            name: {{ include "edc-ionos-s3.fullname" . }}-config
        - name: keystore
          secret:
            secretName: {{ include "edc-ionos-s3.fullname" . }}-keystore
